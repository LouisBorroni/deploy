# Utiliser l'image PHP 8.2 avec Apache
FROM php:8.2-apache

ENV HTTPD_PREFIX /usr/local/apache2
ENV PATH $HTTPD_PREFIX/bin:$PATH
RUN mkdir -p "$HTTPD_PREFIX" \
    && chown www-data:www-data "$HTTPD_PREFIX"
WORKDIR $HTTPD_PREFIX

# Installer les extensions nécessaires pour Laravel
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libzip-dev \
    zip \
    unzip \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd \
    && apt-get install -y nano

RUN a2enmod proxy_fcgi ssl rewrite proxy proxy_balancer proxy_http proxy_ajp

RUN sed -i '/Global configuration/a \
ServerName localhost \
' /etc/apache2/apache2.conf

COPY ./vhosts/api.local.conf /etc/apache2/sites-available/api.local.conf
RUN apache2ctl configtest
#RUN /etc/init.d/apache2 reload apache2

RUN a2dissite 000-default.conf
RUN a2ensite api.local.conf
RUN /etc/init.d/apache2 restart apache2

# Installer Composer
# Install and Configure composer 
RUN curl -sSk https://getcomposer.org/installer | php -- --disable-tls && \
    mv composer.phar /usr/local/bin/composer

# https://getcomposer.org/doc/03-cli.md#composer-allow-superuser
ENV COMPOSER_ALLOW_SUPERUSER=1

# Configurer le répertoire de travail
WORKDIR /var/www/html/api

# Copier les fichiers de l'application
COPY ./api .

RUN composer install

# Exposer le port 80 et 443
EXPOSE 80 443

RUN rm -f /run/apache2/apache2.pid

RUN chown -R www-data:www-data /var/www/html \
    && a2enmod rewrite

# Commande pour lancer Apache
CMD ["apachectl", "-D", "FOREGROUND", "-e", "info"]
