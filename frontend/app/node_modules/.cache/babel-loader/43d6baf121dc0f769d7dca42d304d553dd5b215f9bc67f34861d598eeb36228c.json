{"ast":null,"code":"// userReducer.ts\nimport{SET_USER,LOGOUT_USER}from'./userActions';// Définir le type UserState\n// Vérifie si des données d'utilisateur sont présentes dans le stockage local\nconst savedUser=localStorage.getItem('currentUser');const initialState={currentUser:savedUser?JSON.parse(savedUser):null};const userReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER:// Sauvegarde les informations de l'utilisateur dans le stockage local\nlocalStorage.setItem('currentUser',JSON.stringify(action.payload));return{...state,currentUser:action.payload};case LOGOUT_USER:// Supprime les informations de l'utilisateur du stockage local\nlocalStorage.removeItem('currentUser');return{...state,currentUser:null};default:return state;}};export default userReducer;","map":{"version":3,"names":["SET_USER","LOGOUT_USER","savedUser","localStorage","getItem","initialState","currentUser","JSON","parse","userReducer","state","arguments","length","undefined","action","type","setItem","stringify","payload","removeItem"],"sources":["/usr/src/app/src/redux/user/userReducer.ts"],"sourcesContent":["// userReducer.ts\r\n\r\nimport { User } from '../../types/User';\r\nimport { SET_USER, LOGOUT_USER } from './userActions';\r\n\r\n// Définir le type UserState\r\ninterface UserState {\r\n  currentUser: User | null;\r\n}\r\n\r\n// Vérifie si des données d'utilisateur sont présentes dans le stockage local\r\nconst savedUser = localStorage.getItem('currentUser');\r\nconst initialState: UserState = {\r\n  currentUser: savedUser ? JSON.parse(savedUser) : null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action: any): UserState => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      // Sauvegarde les informations de l'utilisateur dans le stockage local\r\n      localStorage.setItem('currentUser', JSON.stringify(action.payload));\r\n\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    case LOGOUT_USER:\r\n      // Supprime les informations de l'utilisateur du stockage local\r\n      localStorage.removeItem('currentUser');\r\n\r\n      return {\r\n        ...state,\r\n        currentUser: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n"],"mappings":"AAAA;AAGA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,eAAe,CAErD;AAKA;AACA,KAAM,CAAAC,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACrD,KAAM,CAAAC,YAAuB,CAAG,CAC9BC,WAAW,CAAEJ,SAAS,CAAGK,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC,CAAG,IACnD,CAAC,CAED,KAAM,CAAAO,WAAW,CAAG,QAAAA,CAAA,CAAkD,IAAjD,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,YAAY,IAAE,CAAAS,MAAW,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACpD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAAf,QAAQ,CACX;AACAG,YAAY,CAACa,OAAO,CAAC,aAAa,CAAET,IAAI,CAACU,SAAS,CAACH,MAAM,CAACI,OAAO,CAAC,CAAC,CAEnE,MAAO,CACL,GAAGR,KAAK,CACRJ,WAAW,CAAEQ,MAAM,CAACI,OACtB,CAAC,CACH,IAAK,CAAAjB,WAAW,CACd;AACAE,YAAY,CAACgB,UAAU,CAAC,aAAa,CAAC,CAEtC,MAAO,CACL,GAAGT,KAAK,CACRJ,WAAW,CAAE,IACf,CAAC,CACH,QACE,MAAO,CAAAI,KAAK,CAChB,CACF,CAAC,CAED,cAAe,CAAAD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}