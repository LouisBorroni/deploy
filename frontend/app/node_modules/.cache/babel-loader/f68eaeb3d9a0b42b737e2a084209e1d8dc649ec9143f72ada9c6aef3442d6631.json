{"ast":null,"code":"// src/services/RessourceService.ts\nconst API_URL='http://localhost/api';const RessourceService={getRessourceById:async ressourceId=>{try{const response=await fetch(\"\".concat(API_URL,\"/ressourceById/\").concat(ressourceId),{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();return data;}catch(error){console.error('Error while fetching resource by ID:',error.message);throw error;}},updateStatus:async ressourceData=>{try{const response=await fetch(\"\".concat(API_URL,\"/updateStatus\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(ressourceData)});const data=await response.json();return data;}catch(error){console.error('Error while updating resource:',error.message);throw error;}},updateRessource:async ressourceData=>{try{const response=await fetch(\"\".concat(API_URL,\"/updateRessource/\"),{method:'Patch',headers:{'Content-Type':'application/json'},body:JSON.stringify(ressourceData)});const data=await response.json();return data;}catch(error){console.error('Error while updating resource:',error.message);throw error;}},getAllRessources:async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/ressources\"));const data=await response.json();return data;}catch(error){console.error('Error fetching ressources:',error);throw error;}},getAllRessourcesForApproving:async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/ressourcesForApproving\"));const data=await response.json();return data;}catch(error){console.error('Error fetching ressources:',error);throw error;}},getAllRessourcesForListing:async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/ressourcesForListing\"));const data=await response.json();return data;}catch(error){console.error('Error fetching ressources:',error);throw error;}},addRessource:async ressourceData=>{try{const response=await fetch(\"\".concat(API_URL,\"/addRessource\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(ressourceData)});const data=await response.json();return data;}catch(error){console.error('Error adding ressource:',error);throw error;}},deleteRessource:async ressourceId=>{try{const response=await fetch(\"\".concat(API_URL,\"/deleteRessource/\").concat(ressourceId),{method:'POST',headers:{'Content-Type':'application/json'}});const data=await response.json();return data;}catch(error){console.error('Error while delting resource by ID:',error.message);throw error;}}};export default RessourceService;","map":{"version":3,"names":["API_URL","RessourceService","getRessourceById","ressourceId","response","fetch","concat","method","headers","data","json","error","console","message","updateStatus","ressourceData","body","JSON","stringify","updateRessource","getAllRessources","getAllRessourcesForApproving","getAllRessourcesForListing","addRessource","deleteRessource"],"sources":["/usr/src/app/src/services/ressourceService.ts"],"sourcesContent":["// src/services/RessourceService.ts\r\n\r\ntype MediaType = 'video' | 'article' | 'defi' | 'exercice' | 'fiche_lecture';\r\n\r\nconst API_URL = 'http://localhost/api';\r\n\r\ninterface RessourceData {\r\n  Title_Ressource: string;\r\n  Description_Ressource: string;\r\n  State_Ressource: string;\r\n  Public_Ressource: boolean;\r\n  Content_Ressource: string;\r\n  Type_Ressource: MediaType;\r\n}\r\n\r\nexport interface RessourceDataUpdate{\r\n  Id_Ressource?: number;\r\n  Title_Ressource: string;\r\n  Description_Ressource: string;\r\n  Content_Ressource: string;\r\n  State_Ressource:string,\r\n  Type_Ressource: string;\r\n  Public_Ressource: number;\r\n  Id_Category: number;\r\n  Id_RelationType: number;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst RessourceService = {\r\n\r\n  getRessourceById: async (ressourceId: number) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/ressourceById/${ressourceId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error: any) {\r\n      console.error('Error while fetching resource by ID:', error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateStatus: async (ressourceData: RessourceDataUpdate) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/updateStatus`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(ressourceData),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error: any) {\r\n      console.error('Error while updating resource:', error.message);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  updateRessource: async (ressourceData: RessourceDataUpdate) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/updateRessource/`, {\r\n        method: 'Patch',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(ressourceData),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error: any) {\r\n      console.error('Error while updating resource:', error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getAllRessources: async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/ressources`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching ressources:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getAllRessourcesForApproving: async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/ressourcesForApproving`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching ressources:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getAllRessourcesForListing: async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/ressourcesForListing`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching ressources:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  addRessource: async (ressourceData: RessourceData) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/addRessource`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(ressourceData),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error adding ressource:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteRessource: async (ressourceId: number) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/deleteRessource/${ressourceId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error: any) {\r\n      console.error('Error while delting resource by ID:', error.message);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default RessourceService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}