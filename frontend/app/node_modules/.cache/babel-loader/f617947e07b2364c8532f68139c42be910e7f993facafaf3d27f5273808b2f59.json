{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import RessourceService from\"../services/ressourceService\";import\"./RessourceDetailPage.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RessourceDetailPage=()=>{// Utilisez useParams pour récupérer les paramètres de l'URL\nconst{id}=useParams();// Définir id comme une chaîne de caractères facultative\n// State local pour stocker les détails de la ressource\nconst[ressource,setRessource]=useState(null);useEffect(()=>{// Vérifiez si l'ID est défini avant de l'utiliser\nif(id){// Convertissez l'ID en nombre (si nécessaire)\nconst resourceId=parseInt(id,10);if(!isNaN(resourceId)){// Utilisez l'ID pour récupérer les détails de la ressource depuis le service\nconst fetchRessource=async()=>{try{const res=await RessourceService.getRessourceById(resourceId);setRessource(res);}catch(error){console.log(\"Erreur lors de la récupération des détails de la ressource :\",error);}};fetchRessource();}}},[id]);if(!ressource){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}// Extraire l'identifiant de la vidéo YouTube à partir du lien dans le contenu\nconst youtubeVideoId=extractYoutubeVideoId(ressource.Content_Ressource);return/*#__PURE__*/_jsxs(\"div\",{className:\"ressource-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ressource-title\",children:/*#__PURE__*/_jsx(\"h2\",{children:ressource.Title_Ressource})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Description: \",ressource.Description_Ressource]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",ressource.Type_Ressource]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Cat\\xE9gorie: \",ressource.category.Title_Category]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Type de relation: \",ressource.relation_type.Title_RelationType]}),ressource.Type_Ressource==\"vidéo\"&&youtubeVideoId?/*#__PURE__*/_jsx(\"div\",{className:\"video-preview\",children:/*#__PURE__*/_jsx(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/\".concat(youtubeVideoId),frameBorder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true})}):/*#__PURE__*/_jsxs(\"p\",{children:[\"Contenu : \",ressource.Content_Ressource]})]});};// Fonction pour extraire l'identifiant de la vidéo YouTube à partir du lien\nconst extractYoutubeVideoId=content=>{const youtubeRegex=/(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;const match=content.match(youtubeRegex);return match?match[1]:null;};export default RessourceDetailPage;","map":{"version":3,"names":["React","useEffect","useState","useParams","RessourceService","jsx","_jsx","jsxs","_jsxs","RessourceDetailPage","id","ressource","setRessource","resourceId","parseInt","isNaN","fetchRessource","res","getRessourceById","error","console","log","children","youtubeVideoId","extractYoutubeVideoId","Content_Ressource","className","Title_Ressource","Description_Ressource","Type_Ressource","category","Title_Category","relation_type","Title_RelationType","width","height","src","concat","frameBorder","allow","allowFullScreen","content","youtubeRegex","match"],"sources":["/usr/src/app/src/page/RessourceDetailPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RessourceService from \"../services/ressourceService\";\r\nimport \"./RessourceDetailPage.css\";\r\n\r\nconst RessourceDetailPage: React.FC = () => {\r\n  // Utilisez useParams pour récupérer les paramètres de l'URL\r\n  const { id } = useParams<{ id?: string }>(); // Définir id comme une chaîne de caractères facultative\r\n\r\n  // State local pour stocker les détails de la ressource\r\n  const [ressource, setRessource] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    // Vérifiez si l'ID est défini avant de l'utiliser\r\n    if (id) {\r\n      // Convertissez l'ID en nombre (si nécessaire)\r\n      const resourceId = parseInt(id, 10);\r\n      if (!isNaN(resourceId)) {\r\n        // Utilisez l'ID pour récupérer les détails de la ressource depuis le service\r\n        const fetchRessource = async () => {\r\n          try {\r\n            const res = await RessourceService.getRessourceById(resourceId);\r\n            setRessource(res);\r\n          } catch (error) {\r\n            console.log(\r\n              \"Erreur lors de la récupération des détails de la ressource :\",\r\n              error\r\n            );\r\n          }\r\n        };\r\n\r\n        fetchRessource();\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  if (!ressource) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Extraire l'identifiant de la vidéo YouTube à partir du lien dans le contenu\r\n  const youtubeVideoId = extractYoutubeVideoId(ressource.Content_Ressource);\r\n\r\n  return (\r\n    <div className=\"ressource-container\">\r\n      <div className=\"ressource-title\">\r\n        <h2>{ressource.Title_Ressource}</h2>\r\n      </div>\r\n      <p>Description: {ressource.Description_Ressource}</p>\r\n      <p>Type: {ressource.Type_Ressource}</p>\r\n      <p>Catégorie: {ressource.category.Title_Category}</p>\r\n      <p>Type de relation: {ressource.relation_type.Title_RelationType}</p>\r\n      {ressource.Type_Ressource == \"vidéo\" && youtubeVideoId ? (\r\n        <div className=\"video-preview\">\r\n          <iframe\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src={`https://www.youtube.com/embed/${youtubeVideoId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        </div>\r\n      ) : (\r\n        <p>Contenu : {ressource.Content_Ressource}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Fonction pour extraire l'identifiant de la vidéo YouTube à partir du lien\r\nconst extractYoutubeVideoId = (content: string): string | null => {\r\n  const youtubeRegex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\r\n  const match = content.match(youtubeRegex);\r\n  return match ? match[1] : null;\r\n};\r\n\r\nexport default RessourceDetailPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}