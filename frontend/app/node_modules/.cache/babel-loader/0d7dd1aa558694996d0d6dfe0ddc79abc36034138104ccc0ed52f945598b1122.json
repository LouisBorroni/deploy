{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./rolesPage.css\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faPen}from\"@fortawesome/free-solid-svg-icons\";import RoleService from\"../services/roleService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RolePage=()=>{const storedUser=sessionStorage.getItem(\"User\");const actualUser=storedUser?JSON.parse(storedUser).user:null;const isForbidden=actualUser&&actualUser.Id_Role<3;const[roles,setRoles]=useState([]);const[users,setUsers]=useState([]);const[showModal,setShowModal]=useState(false);const[selectedUser,setSelectedUser]=useState(null);const[selectedRole,setSelectedRole]=useState('');useEffect(()=>{if(!isForbidden){fetchRoles();fetchUsers();}},[isForbidden]);const fetchRoles=async()=>{try{const res=await RoleService.getAllRoles();setRoles(res);}catch(error){console.log(\"Erreur lors de la récupération des rôles :\",error);}};const fetchUsers=async()=>{try{const res=await RoleService.getAllUserForRoles();const filteredUsers=res.filter(user=>user.Id_User!==(actualUser===null||actualUser===void 0?void 0:actualUser.Id_User));setUsers(filteredUsers);}catch(error){console.log(\"Erreur lors de la récupération des utilisateurs :\",error);}};const handleEditRole=user=>{setSelectedUser(user);setShowModal(true);};const handleCloseModal=()=>{setShowModal(false);setSelectedUser(null);};const handleSaveRole=async(idUser,idRole)=>{try{const parsedRoleId=parseInt(idRole);if(!isNaN(parsedRoleId)){await RoleService.updateUserRole(idUser,parsedRoleId);handleCloseModal();fetchUsers();}else{console.error('Invalid role ID');}}catch(error){console.log(\"Erreur lors de la modification du rôle :\",error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"role-page\",children:isForbidden?/*#__PURE__*/_jsx(\"h1\",{children:\"INTERDIT\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"G\\xE9rer les r\\xF4les des Utilisateurs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-wrapper\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"role-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pr\\xE9nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"T\\xE9l\\xE9phone\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Role\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Editer le r\\xF4le\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map((user,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.FirstName_User}),/*#__PURE__*/_jsx(\"td\",{children:user.LastName_User}),/*#__PURE__*/_jsx(\"td\",{children:user.Email_User}),/*#__PURE__*/_jsx(\"td\",{children:user.Tel_User}),/*#__PURE__*/_jsx(\"td\",{children:user.role.Title_Role}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"action-button see\",onClick:()=>handleEditRole(user),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPen})})})]},index))})]})}),showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close\",onClick:handleCloseModal,children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Modifier le r\\xF4le de \",selectedUser.FirstName_User,\" \",selectedUser.LastName_User]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedRole,onChange:e=>setSelectedRole(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner un r\\xF4le\"}),roles.map(role=>/*#__PURE__*/_jsx(\"option\",{value:role.Id_Role,children:role.Title_Role},role.Id_Role))]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSaveRole(selectedUser.Id_User,selectedRole),children:\"Valider\"})]})})]})});};export default RolePage;","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faPen","RoleService","jsx","_jsx","jsxs","_jsxs","RolePage","storedUser","sessionStorage","getItem","actualUser","JSON","parse","user","isForbidden","Id_Role","roles","setRoles","users","setUsers","showModal","setShowModal","selectedUser","setSelectedUser","selectedRole","setSelectedRole","fetchRoles","fetchUsers","res","getAllRoles","error","console","log","getAllUserForRoles","filteredUsers","filter","Id_User","handleEditRole","handleCloseModal","handleSaveRole","idUser","idRole","parsedRoleId","parseInt","isNaN","updateUserRole","className","children","map","index","FirstName_User","LastName_User","Email_User","Tel_User","role","Title_Role","onClick","icon","value","onChange","e","target"],"sources":["/usr/src/app/src/page/rolesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./rolesPage.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport RoleService from \"../services/roleService\";\r\n\r\nconst RolePage: React.FC = () => {\r\n  const storedUser: string | null = sessionStorage.getItem(\"User\");\r\n  const actualUser = storedUser ? JSON.parse(storedUser).user : null;\r\n\r\n  const isForbidden = actualUser && actualUser.Id_Role < 3;\r\n\r\n  const [roles, setRoles] = useState<any[]>([]);\r\n  const [users, setUsers] = useState<any[]>([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<any>(null);\r\n  const [selectedRole, setSelectedRole] = useState<any>('');\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isForbidden) {\r\n      fetchRoles();\r\n      fetchUsers();\r\n    }\r\n  }, [isForbidden]);\r\n\r\n  const fetchRoles = async () => {\r\n    try {\r\n      const res = await RoleService.getAllRoles();\r\n      setRoles(res);\r\n    } catch (error) {\r\n      console.log(\"Erreur lors de la récupération des rôles :\", error);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await RoleService.getAllUserForRoles();\r\n      const filteredUsers = res.filter((user: any) => user.Id_User !== actualUser?.Id_User);\r\n      setUsers(filteredUsers);\r\n    } catch (error) {\r\n      console.log(\"Erreur lors de la récupération des utilisateurs :\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditRole = (user: any) => {\r\n    setSelectedUser(user);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const handleSaveRole = async (idUser: any, idRole: any) => {\r\n    try {\r\n      const parsedRoleId = parseInt(idRole);\r\n      if (!isNaN(parsedRoleId)) {\r\n        await RoleService.updateUserRole(idUser, parsedRoleId);\r\n        handleCloseModal();\r\n        fetchUsers();\r\n      } else {\r\n        console.error('Invalid role ID');\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Erreur lors de la modification du rôle :\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"role-page\">\r\n      {isForbidden ? (\r\n        <h1>INTERDIT</h1>\r\n      ) : (\r\n        <div>\r\n          <h1>Gérer les rôles des Utilisateurs</h1>\r\n          <div className=\"table-wrapper\">\r\n            <table className=\"role-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Nom</th>\r\n                  <th>Prénom</th>\r\n                  <th>Email</th>\r\n                  <th>Téléphone</th>\r\n                  <th>Role</th>\r\n                  <th>Editer le rôle</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user: any, index: number) => (\r\n                  <tr key={index}>\r\n                    <td>{user.FirstName_User}</td>\r\n                    <td>{user.LastName_User}</td>\r\n                    <td>{user.Email_User}</td>\r\n                    <td>{user.Tel_User}</td>\r\n                    <td>{user.role.Title_Role}</td>\r\n                    <td>\r\n                      <button className=\"action-button see\" onClick={() => handleEditRole(user)}>\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {showModal && (\r\n            <div className=\"modal\">\r\n              <div className=\"modal-content\">\r\n                <span className=\"close\" onClick={handleCloseModal}>\r\n                  &times;\r\n                </span>\r\n                <h2>Modifier le rôle de {selectedUser.FirstName_User} {selectedUser.LastName_User}</h2>\r\n                <select value={selectedRole} onChange={(e) => setSelectedRole(e.target.value)}>\r\n                  <option value=\"\">Sélectionner un rôle</option>\r\n                  {roles.map((role: any) => (\r\n                    <option key={role.Id_Role} value={role.Id_Role}>{role.Title_Role}</option>\r\n                  ))}\r\n                </select>\r\n                <button onClick={() => handleSaveRole(selectedUser.Id_User, selectedRole)}>Valider</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RolePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}