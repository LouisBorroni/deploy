{"ast":null,"code":"const API_URL='http://localhost/api';const RoleService={getAllRoles:async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/roles\"));const data=await response.json();return data;}catch(error){console.error('Error fetching relation types:',error);throw error;}},updateUserRole:async(idUser,idRole)=>{const dataUpdate={Id_User:idUser,Id_Role:idRole};console.log(dataUpdate);try{const response=await fetch(\"\".concat(API_URL,\"/updateRole\"),{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify(dataUpdate)});const data=await response.json();return data;}catch(error){console.error('Error while updating resource:',error.message);throw error;}},getAllUserForRoles:async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/users\"));const data=await response.json();return data;}catch(error){console.error('Error fetching ressources:',error);throw error;}}};export default RoleService;","map":{"version":3,"names":["API_URL","RoleService","getAllRoles","response","fetch","concat","data","json","error","console","updateUserRole","idUser","idRole","dataUpdate","Id_User","Id_Role","log","method","headers","body","JSON","stringify","message","getAllUserForRoles"],"sources":["/usr/src/app/src/services/roleService.ts"],"sourcesContent":["const API_URL = 'http://localhost/api';\r\n\r\n\r\nconst RoleService = {\r\n    getAllRoles: async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/roles`);\r\n          const data = await response.json();\r\n          return data;\r\n        } catch (error) {\r\n          console.error('Error fetching relation types:', error);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      updateUserRole: async (idUser: any, idRole: any) => {\r\n        const dataUpdate = {\r\n          Id_User: idUser,\r\n          Id_Role: idRole\r\n        };\r\n        console.log(dataUpdate)\r\n      \r\n        try {\r\n          const response = await fetch(`${API_URL}/updateRole`, {\r\n            method: 'Post',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(dataUpdate),\r\n          });\r\n          const data = await response.json();\r\n          return data;\r\n        } catch (error: any) {\r\n          console.error('Error while updating resource:', error.message);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      getAllUserForRoles: async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/users`);\r\n          const data = await response.json();\r\n          return data;\r\n        } catch (error) {\r\n          console.error('Error fetching ressources:', error);\r\n          throw error;\r\n        }\r\n      },\r\n};\r\n\r\n\r\nexport default RoleService;\r\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,sBAAsB,CAGtC,KAAM,CAAAC,WAAW,CAAG,CAChBC,WAAW,CAAE,KAAAA,CAAA,GAAY,CACrB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIL,OAAO,UAAQ,CAAC,CAChD,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDE,cAAc,CAAE,KAAAA,CAAOC,MAAW,CAAEC,MAAW,GAAK,CAClD,KAAM,CAAAC,UAAU,CAAG,CACjBC,OAAO,CAAEH,MAAM,CACfI,OAAO,CAAEH,MACX,CAAC,CACDH,OAAO,CAACO,GAAG,CAACH,UAAU,CAAC,CAEvB,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIL,OAAO,gBAAe,CACpDiB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,UAAU,CACjC,CAAC,CAAC,CACF,KAAM,CAAAP,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAU,CAAE,CACnBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAACc,OAAO,CAAC,CAC9D,KAAM,CAAAd,KAAK,CACb,CACF,CAAC,CAEDe,kBAAkB,CAAE,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIL,OAAO,UAAQ,CAAC,CAChD,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CACN,CAAC,CAGD,cAAe,CAAAP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}